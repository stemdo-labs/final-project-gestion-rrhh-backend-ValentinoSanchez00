name: CD
on:
  workflow_dispatch:
    inputs:
      VERSION_CHART:
        description: 'Versi√≥n del Chart'
        required: true
      MICROSERVICE:
        description: 'Nombre del microservicio'
        required: true
        default: 'backend'

jobs:
  deploy:
    runs-on: runner-stemdo-labs
    steps:
      - name: Install Azure
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: |
            {
              "clientId": "${{ secrets.ARM_CLIENT_ID }}",
              "clientSecret": "${{ secrets.ARM_CLIENT_SECRET }}",
              "tenantId": "${{ secrets.ARM_TENANT_ID }}",
              "subscriptionId": "${{ secrets.ARM_SUBSCRIPTION_ID }}"
            }

      - name: Azure Container Registry Login
        uses: docker/login-action@v3
        with:
          registry: containerregistryvsanchez.azurecr.io
          username: ${{ secrets.ARM_CLIENT_ID }}
          password: ${{ secrets.ARM_CLIENT_SECRET }}
      
      - name: Download Dockerfile from ACR
        run: |
          docker pull containerregistryvsanchez.azurecr.io/imagen-proyecto-${{ inputs.MICROSERVICE }}:0.0.1-SNAPSHOT

      - name: Descargar del harbor el chart
        env:
          HARBOR_PASSWORD: ${{ secrets.HARBOR_PASSWORD }}
          NAME_CHART: chart-${{ inputs.MICROSERVICE }}
          VERSION_CHART: ${{ inputs.VERSION_CHART }}
        run: |
          helm registry login -u vsanchez -p $HARBOR_PASSWORD harbor.codeops.es
          helm pull ${NAME_CHART}-${VERSION_CHART}.tgz oci://harbor.codeops.es/vsanchez
      
      - name: Credenciales cluster
        run: |
          az aks get-credentials --resource-group rg-vsanchez-dvfinlab --name clustervsanche

      - name: Desempaquetar el chart
        run: |
          helm install ${NAME_CHART}-${VERSION_CHART} ${NAME_CHART}-${VERSION_CHART}.tgz
        env:
          NAME_CHART: chart-${{ inputs.MICROSERVICE }}
          VERSION_CHART: ${{ inputs.VERSION_CHART }}

